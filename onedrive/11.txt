import { Component, EventEmitter, Input, Output } from '@angular/core';

@Component({
  selector: 'app-value-provider',
  template: `
    <input type="text" (input)="onInput($event.target.value)">
  `
})
export class ValueProviderComponent {
  @Output() typedValue = new EventEmitter<string>();

  onInput(value: string) {
    this.typedValue.emit(value);
  }
}

@Component({
  selector: 'app-value-receiver',
  template: `
    <div>Received value: {{printValue}}</div>
  `
})
export class ValueReceiverComponent {
  @Input() printValue: string;
}

@Component({
  selector: 'app-root',
  template: `
    <h1>Value Provider:</h1>
    <app-value-provider (typedValue)="onTypedValue($event)"></app-value-provider>

    <h1>Value Receiver:</h1>
    <app-value-receiver [printValue]="typedValue"></app-value-receiver>
  `
})
export class AppComponent {
  typedValue: string;

  onTypedValue(value: string) {
    this.typedValue = value;
  }
}
